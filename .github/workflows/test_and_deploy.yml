name: Test and deploy

on:
  push:
    branches: [master, main]
    tags: ["*"]

jobs:
  publish:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: olafurpg/setup-scala@v10
      - uses: olafurpg/setup-gpg@v3
      - run: sbt "project core" ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.SONA_PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.SONA_PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONA_PASS }}
          SONATYPE_USERNAME: snowplow

  coveralls:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Run tests
        run: sbt coverage +test coverageReport

      - name: Aggregate coverage data
        run: sbt coverageAggregate

      - name: Aggregate coverage data and submit
        run: sbt coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish ScalaDoc
        run: |
          project_version=$(sbt version -Dsbt.log.noformat=true | perl -ne 'print "$1\n" if /info.*(\d+\.\d+\.\d+[^\r\n]*)/' | tail -n 1 | tr -d '\n')
          if [[ "${{ github.ref }}" = "refs/tags/${project_version}" ]]
          then
            sbt "project core" makeSite
            echo Publishing Scaladoc
            git fetch
            git checkout gh-pages
            cp -r modules/core/target/site/* .
            git config user.name "GitHub Actions"
            git config user.email "<>"
            git add $project_version
            git commit -m "Added Scaladoc for $project_version"
            git push origin gh-pages
          else
            echo "${{ github.ref }} does not match project version $project_version => not publishing"
            exit 1
          fi

